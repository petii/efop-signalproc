#version 450
#extension GL_ARB_separate_shader_objects : enable

#define M_PI 3.14159265358979323846

//#define BUFFER_SIZE 1024
#define WORKGROUP_SIZE 1

// layout (constant_id = 20) const int WORKGROUP_SIZE = 128;
layout(constant_id = 21) const int BUFFER_SIZE = 512;
#define RESULT_SIZE (BUFFER_SIZE / 2)
// layout (constant_id = 22) const int WORKGROUP_SIZE = 2;

// layout (local_size_x_id = 20,local_size_y=1,local_size_z=1) in;
layout(local_size_x = WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer AudioData { float value[BUFFER_SIZE]; }
audio;

layout(std430, binding = 1) buffer buf {
  // Complex result[BUFFER_SIZE];
  float result[BUFFER_SIZE / 2];
};

void main() {
  uint index = gl_GlobalInvocationID.x;
  float real = 0.0;
  float im = 0.0;
  for (int i = 0; i < BUFFER_SIZE; ++i) {
    float p = 2 * M_PI * index * i / BUFFER_SIZE;
    real += audio.value[i] * cos(p);
    im += audio.value[i] * -sin(p);
  }
  result[index] = sqrt(real * real + im * im) ;
  // result[index] /= (BUFFER_SIZE / index);
}